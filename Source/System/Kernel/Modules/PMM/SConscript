# -*- python -*-

 # Draumr build system.
 #
 # Copyright (c) 2012, Shikhin Sethi
 # All rights reserved.
 #
 # Redistribution and use in source and binary forms, with or without
 # modification, are permitted provided that the following conditions are met:
 #     * Redistributions of source code must retain the above copyright
 #       notice, this list of conditions and the following disclaimer.
 #     * Redistributions in binary form must reproduce the above copyright
 #       notice, this list of conditions and the following disclaimer in the
 #       documentation and/or other materials provided with the distribution.
 #     * Neither the name of Draumr nor the
 #       names of its contributors may be used to endorse or promote products
 #       derived from this software without specific prior written permission.
 #
 # THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 # ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 # WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 # DISCLAIMED. IN NO EVENT SHALL SHIKHIN SETHI BE LIABLE FOR ANY
 # DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 # (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 # LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 # ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 # SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Import("Env", "SysEnv")

GenSrc = ["Header.asm"]

# A target for building the PMM binary.
x86SysEnv = SysEnv.Clone(LINKFLAGS = "-m elf_i386 -TSource/System/Kernel/Modules/PMM/Src/x86/Link.ld", CCFLAGS = ["-march=i586", "-m32", "-D _x86"], ASFLAGS=["-felf", "-D _x86"])
x86SysEnv.VariantDir('Src/x86', 'Src/Generic', duplicate=0)
PMMx86 = x86SysEnv.Program("PMMx86", ['Src/x86/' + File for File in GenSrc])

x86PAESysEnv = SysEnv.Clone(LINKFLAGS = "-m elf_i386 -TSource/System/Kernel/Modules/PMM/Src/x86/PAE/Link.ld", CCFLAGS = ["-march=pentiumpro", "-m32", "-D _x86PAE"], ASFLAGS=["-felf", "-D _x86PAE"])
x86PAESysEnv.VariantDir('Src/x86/PAE', 'Src/Generic', duplicate=0)
PMMx86PAE = x86PAESysEnv.Program("PMMPAE", ['Src/x86/PAE/' + File for File in GenSrc])

AMD64SysEnv = SysEnv.Clone(LINKFLAGS = "-m elf_x86_64 -TSource/System/Kernel/Modules/PMM/Src/AMD64/Link.ld", CCFLAGS = ["-march=nocona", "-m64", "-D _AMD64", "-mcmodel=large", "-mno-red-zone", "-mno-mmx", "-mno-sse", "-mno-sse2", "-mno-sse3", "-mno-3dnow"], ASFLAGS=["-felf64", "-D _AMD64"])
AMD64SysEnv.VariantDir('Src/AMD64', 'Src/Generic', duplicate=0)
PMMAMD64 = AMD64SysEnv.Program("PMMAMD64", ['Src/AMD64/' + File for File in GenSrc])

Depends(PMMx86, ['Src/Generic/' + File for File in GenSrc])
Depends(PMMx86PAE, ['Src/Generic/' + File for File in GenSrc])
Depends(PMMAMD64, ['Src/Generic/' + File for File in GenSrc])

Env["PMMx86"] = PMMx86
Env["PMMx86PAE"] = PMMx86PAE
Env["PMMAMD64"] = PMMAMD64
