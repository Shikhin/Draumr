# -*- python -*-

 # Draumr build system.
 #
 # Copyright (c) 2012, Shikhin Sethi
 # All rights reserved.
 #
 # Redistribution and use in source and binary forms, with or without
 # modification, are permitted provided that the following conditions are met:
 #     * Redistributions of source code must retain the above copyright
 #       notice, this list of conditions and the following disclaimer.
 #     * Redistributions in binary form must reproduce the above copyright
 #       notice, this list of conditions and the following disclaimer in the
 #       documentation and/or other materials provided with the distribution.
 #     * Neither the name of Draumr nor the
 #       names of its contributors may be used to endorse or promote products
 #       derived from this software without specific prior written permission.
 #
 # THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 # ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 # WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 # DISCLAIMED. IN NO EVENT SHALL SHIKHIN SETHI BE LIABLE FOR ANY
 # DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 # (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 # LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 # ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 # SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Import("Env", "SysEnv")

GenSrc = ["Header.asm"]

# A target for building the VMM binary.
x86SysEnv = SysEnv.Clone(LINKFLAGS = "-m elf_i386 -TSource/System/Kernel/Modules/VMM/Arch/x86/Link.ld", CCFLAGS = ["-march=i586", "-m32", "-D _x86"], ASFLAGS=["-felf", "-D _x86"])
x86SysEnv.VariantDir('Arch/x86', 'Arch/Generic', duplicate=0)
VMMx86 = x86SysEnv.Program("VMMx86", ['Arch/x86/' + File for File in GenSrc])

x86PAESysEnv = SysEnv.Clone(LINKFLAGS = "-m elf_i386 -TSource/System/Kernel/Modules/VMM/Arch/PAE/Link.ld", CCFLAGS = ["-march=pentiumpro", "-m32", "-D _x86PAE"], ASFLAGS=["-felf", "-D _x86PAE"])
x86PAESysEnv.VariantDir('Arch/PAE', 'Arch/Generic', duplicate=0)
VMMx86PAE = x86PAESysEnv.Program("VMMPAE", ['Arch/PAE/' + File for File in GenSrc])

AMD64SysEnv = SysEnv.Clone(LINKFLAGS = "-m elf_x86_64 -TSource/System/Kernel/Modules/VMM/Arch/AMD64/Link.ld", CCFLAGS = ["-march=nocona", "-m64", "-D _AMD64", "-mcmodel=large", "-mno-red-zone", "-mno-mmx", "-mno-sse", "-mno-sse2", "-mno-sse3", "-mno-3dnow"], ASFLAGS=["-felf64", "-D _AMD64"])
AMD64SysEnv.VariantDir('Arch/AMD64', 'Arch/Generic', duplicate=0)
VMMAMD64 = AMD64SysEnv.Program("VMMAMD64", ['Arch/AMD64/' + File for File in GenSrc])

Depends(VMMx86, ['Arch/Generic/' + File for File in GenSrc])
Depends(VMMx86PAE, ['Arch/Generic/' + File for File in GenSrc])
Depends(VMMAMD64, ['Arch/Generic/' + File for File in GenSrc])

Env["VMMx86"] = VMMx86
Env["VMMx86PAE"] = VMMx86PAE
Env["VMMAMD64"] = VMMAMD64
